diff --git a/node_modules/react-native-modal-popover/src/Popover.tsx b/node_modules/react-native-modal-popover/src/Popover.tsx
index 87a449c..3c0846a 100644
--- a/node_modules/react-native-modal-popover/src/Popover.tsx
+++ b/node_modules/react-native-modal-popover/src/Popover.tsx
@@ -13,7 +13,7 @@ import {
   ViewStyle,
   StyleProp,
   I18nManager,
-  StatusBar,
+  StatusBar, EmitterSubscription,
 } from 'react-native';
 import {
   computeGeometry,
@@ -94,6 +94,7 @@ export interface PopoverProps {
   useNativeDriver?: boolean;
   supportedOrientations?: Orientation[];
   calculateStatusBar?: boolean;
+  children?: React.ReactElement<any>;
 }
 
 export interface PopoverState extends Geometry {
@@ -156,6 +157,8 @@ export class Popover extends React.PureComponent<PopoverProps, PopoverState> {
 
   private defaultDisplayArea!: Rect;
 
+  private dimensionListener: EmitterSubscription;
+
   constructor(props: PopoverProps) {
     super(props);
     this.state = {
@@ -171,11 +174,11 @@ export class Popover extends React.PureComponent<PopoverProps, PopoverState> {
   }
 
   componentDidMount() {
-    Dimensions.addEventListener('change', this.onOrientationChange);
+    this.dimensionListener = Dimensions.addEventListener('change', this.onOrientationChange);
   }
 
   componentWillUnmount() {
-    Dimensions.removeEventListener('change', this.onOrientationChange);
+    this.dimensionListener?.remove && this.dimensionListener.remove();
   }
 
   private computeGeometry = (
diff --git a/node_modules/react-native-modal-popover/src/PopoverController.tsx b/node_modules/react-native-modal-popover/src/PopoverController.tsx
index a5e6e32..5e83a2d 100644
--- a/node_modules/react-native-modal-popover/src/PopoverController.tsx
+++ b/node_modules/react-native-modal-popover/src/PopoverController.tsx
@@ -6,7 +6,7 @@ import {
   MeasureOnSuccessCallback,
   NativeModules,
   I18nManager,
-  StatusBar,
+  StatusBar, EmitterSubscription,
 } from 'react-native';
 import { Rect } from './PopoverGeometry';
 
@@ -38,12 +38,14 @@ export class PopoverController extends React.PureComponent<Props, State> {
     popoverAnchor: { x: 0, y: 0, width: 0, height: 0 },
   };
 
+  private dimensionsListener: EmitterSubscription;
+
   componentDidMount() {
-    Dimensions.addEventListener('change', this.onOrientationChange);
+    this.dimensionsListener = Dimensions.addEventListener('change', this.onOrientationChange);
   }
 
   componentWillUnmount() {
-    Dimensions.removeEventListener('change', this.onOrientationChange);
+    this.dimensionsListener?.remove && this.dimensionsListener.remove();
   }
 
   private onOrientationChange = () => {
@@ -67,8 +69,8 @@ export class PopoverController extends React.PureComponent<Props, State> {
   };
 
   private onTouchableMeasured: MeasureOnSuccessCallback = (
-    x0,
-    y0,
+    _x0,
+    _y0,
     width,
     height,
     x,
diff --git a/node_modules/react-native-modal-popover/src/PopoverTouchable.tsx b/node_modules/react-native-modal-popover/src/PopoverTouchable.tsx
index cbb7526..9a31a9d 100644
--- a/node_modules/react-native-modal-popover/src/PopoverTouchable.tsx
+++ b/node_modules/react-native-modal-popover/src/PopoverTouchable.tsx
@@ -1,7 +1,7 @@
 import * as PropTypes from 'prop-types';
 import * as React from 'react';
 import {
-  Dimensions,
+  Dimensions, EmitterSubscription,
   findNodeHandle,
   MeasureOnSuccessCallback,
   NativeModules,
@@ -10,6 +10,7 @@ import { Rect } from './PopoverGeometry';
 
 export interface Props {
   onPopoverDisplayed?: () => any;
+  children: React.ReactElement<any>
 }
 
 export interface State {
@@ -21,6 +22,7 @@ export class PopoverTouchable extends React.PureComponent<Props, State> {
   static propTypes = {
     onPopoverDisplayed: PropTypes.func,
   };
+  private dimensionListener: EmitterSubscription;
 
   constructor(props: Props) {
     super(props);
@@ -33,11 +35,11 @@ export class PopoverTouchable extends React.PureComponent<Props, State> {
   }
 
   componentDidMount() {
-    Dimensions.addEventListener('change', this.onOrientationChange);
+    this.dimensionListener = Dimensions.addEventListener('change', this.onOrientationChange);
   }
 
   componentWillUnmount() {
-    Dimensions.removeEventListener('change', this.onOrientationChange);
+    this.dimensionListener?.remove && this.dimensionListener.remove();
   }
 
   private onOrientationChange = () => {
@@ -61,8 +63,8 @@ export class PopoverTouchable extends React.PureComponent<Props, State> {
   };
 
   private onTouchableMeasured: MeasureOnSuccessCallback = (
-    x0,
-    y0,
+    _x0,
+    _y0,
     width,
     height,
     x,
diff --git a/node_modules/react-native-modal-popover/src/usePopover.ts b/node_modules/react-native-modal-popover/src/usePopover.ts
index 2d05b78..dc946cc 100644
--- a/node_modules/react-native-modal-popover/src/usePopover.ts
+++ b/node_modules/react-native-modal-popover/src/usePopover.ts
@@ -78,9 +78,10 @@ export function usePopover(calculateStatusBar = false): UsePopoverHook {
         requestAnimationFrame(openPopover);
       }
     };
-    Dimensions.addEventListener('change', onOrientationChange);
+
+    const listerner = Dimensions.addEventListener('change', onOrientationChange);
     return () => {
-      Dimensions.removeEventListener('change', onOrientationChange);
+      listerner.remove();
     };
   }, [showPopover, openPopover]);
 
